{"version":3,"file":"static/js/867.05501438.chunk.js","mappings":"wQAOe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAGCC,EAAAA,EAAAA,IAAqBJ,GAHtB,UAGfK,EAHe,6BAKb,IAAIC,MAAM,kBALG,OAOrBT,EAAUQ,EAAQE,MAPG,gDASrBR,EAAS,KAAMS,SATM,yDAAH,qDAYtBL,GACD,GAAE,CAACH,IAEAF,GACK,2BAAK,UAAQA,KAGjBF,GAKH,+BACE,0BACE,SAAC,EAAAa,KAAD,UACGb,EAAOc,KAAI,SAAAC,GAAK,OACf,UAAC,EAAAC,OAAD,YACE,SAAC,EAAAC,MAAD,CACEC,IACEH,EAAMI,aAAN,UAtCL,mCAsCK,OACiBJ,EAAMI,cADvB,U,u4UAIFC,IAAKL,EAAMM,QAEb,SAAC,EAAAC,UAAD,UAAYP,EAAMM,QAClB,UAAC,EAAAC,UAAD,WAAW,aACE,IACVP,EAAMQ,UAAYR,EAAMQ,UAAY,sBAZ5BR,EAAMS,GADJ,WAPhB,SAAC,EAAAC,OAAD,GA6BV,C,+LC3DKC,EAAyB,qCAEzBC,EAAM,mCAECC,EAAyB,mCAAG,6FAEjCC,EAAS,CACbA,OAAQ,CACNC,QAASH,EACTI,SAAU,UALyB,SAQjBC,EAAAA,EAAAA,IAAA,UAdD,mDAcgCH,GARd,cAQjCpB,EARiC,yBAUhCA,EAAQwB,MAVwB,2CAAH,qDAYzBC,EAAY,mCAAG,WAAMC,GAAN,gFAEpBN,EAAS,CACbA,OAAQ,CACNO,MAAOD,EACPL,QAASH,EACTI,SAAU,UANY,SASJC,EAAAA,EAAAA,IAAA,UA1BE,6CA0BgCH,GAT9B,cASpBpB,EAToB,yBAWnBA,EAAQwB,MAXW,2CAAH,sDAaZI,EAAoB,mCAAG,WAAMb,GAAN,gFAC5BK,EAAS,CACbA,OAAQ,CACNC,QAASH,IAHqB,SAMZK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAuCF,GAAMK,GANjC,cAM5BpB,EAN4B,yBAO3BA,EAAQwB,MAPmB,2CAAH,sDASpBzB,EAAoB,mCAAG,WAAMgB,GAAN,gFAC5BK,EAAS,CACbA,OAAQ,CACNC,QAASH,EACTI,SAAU,UAJoB,SAOZC,EAAAA,EAAAA,IAAA,UACjBN,EADiB,YACSF,EADT,YAEpBK,GATgC,cAO5BpB,EAP4B,yBAW3BA,EAAQwB,MAXmB,2CAAH,sDAapBK,EAAoB,mCAAG,WAAMd,GAAN,gFAC5BK,EAAS,CACbA,OAAQ,CACNC,QAASH,EACTI,SAAU,UAJoB,SAOZC,EAAAA,EAAAA,IAAA,UACjBN,EADiB,YACSF,EADT,YAEpBK,GATgC,cAO5BpB,EAP4B,yBAW3BA,EAAQwB,MAXmB,2CAAH,qD","sources":["components/pages/MoviesDetails/MovieCast.jsx","components/server/api.jsx"],"sourcesContent":["import { axiosGetMovieCredits } from 'components/server/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Imege, InfoActor, List, ListEL, Loader } from '../HomePage/HomePage.styled';\nimport imga from '../../../image/not-found-actor.jpg';\nconst IMG_URL = `https://image.tmdb.org/t/p/w500`;\nexport default function MovieCast() {\n  const [actors, setactors] = useState([]);\n  const [error, setError] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const fetchCreditsById = async () => {\n      \n      try {\n        const respons = await axiosGetMovieCredits(moviesId);\n        if (!respons) {\n          throw new Error('no such actors');\n        }\n        setactors(respons.cast);\n      } catch (error) {\n        setError(error.message);\n      } \n    };\n    fetchCreditsById();\n  }, [moviesId]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!actors) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <div>\n        <List>\n          {actors.map(actor => (\n            <ListEL key={actor.id}>\n              <Imege\n                src={\n                  actor.profile_path\n                    ? `${IMG_URL}${actor.profile_path}`\n                    : `${imga}`\n                }\n                alt={actor.name}\n              />\n              <InfoActor>{actor.name}</InfoActor>\n              <InfoActor>\n                Character:{' '}\n                {actor.character ? actor.character : 'no information'}\n              </InfoActor>\n            </ListEL>\n          ))}\n        </List>\n      </div>\n    \n    </>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_SEARCH_MOVIES = 'https://api.themoviedb.org/3/search/movie';\nconst URL_GET_DETAILS_MOVIES = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = 'f67e76050f18af747f45c959a8cec474';\n\nexport const axiosRequestTrendingMovie = async () => {\n\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${BASE_URL_TREND}`, params);\n    \n  return respons.data;\n};\nexport const searchMovies = async searchQuery => {\n  \n  const params = {\n    params: {\n      query: searchQuery,\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${URL_SEARCH_MOVIES}`, params);\n\n  return respons.data;\n};\nexport const axiosGetMovieDetails = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  const respons = await axios.get(`${URL_GET_DETAILS_MOVIES}/${id}`, params);\n  return respons.data;\n};\nexport const axiosGetMovieCredits = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/credits`,\n    params\n  );\n  return respons.data;\n};\nexport const axiosGetMovieReviews = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/reviews`,\n    params\n  );\n  return respons.data;\n};"],"names":["MovieCast","useState","actors","setactors","error","setError","moviesId","useParams","useEffect","fetchCreditsById","axiosGetMovieCredits","respons","Error","cast","message","List","map","actor","ListEL","Imege","src","profile_path","alt","name","InfoActor","character","id","Loader","URL_GET_DETAILS_MOVIES","KEY","axiosRequestTrendingMovie","params","api_key","language","axios","data","searchMovies","searchQuery","query","axiosGetMovieDetails","axiosGetMovieReviews"],"sourceRoot":""}