{"version":3,"file":"static/js/494.fc38b3dd.chunk.js","mappings":"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","sources":["components/pages/MoviesDetails/MoviesDetails.jsx","components/server/api.jsx"],"sourcesContent":["import { axiosGetMovieDetails } from 'components/server/api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ButtonInfo,\n  Container,\n  ContainerButtons,\n  ContainerInfoFilm,\n  Genres,\n  ImgFilm,\n  InformationForFilm,\n  Loader,\n} from '../HomePage/HomePage.styled';\nimport img from '../../../image/1363011.png';\nconst IMG_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport default function MoviesDetails() {\n  const [movieinfo, setMovieinfo] = useState(null);\n  const [error, setError] = useState(null);\n  const { moviesId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesById = async () => {\n      try {\n        const respons = await axiosGetMovieDetails(moviesId);\n        if (!respons) {\n          throw new Error('no such movie');\n        }\n        setMovieinfo(respons);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchMoviesById();\n  }, [moviesId]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!movieinfo) {\n    return <Loader/>;\n  }\n\n  const { original_title, overview, genres, poster_path } = movieinfo;\n  const goBackPath = location.state?.from || '/';\n  return (\n    <>\n      <Container>\n        <NavLink to={goBackPath}>\n          <ButtonInfo>Go Back</ButtonInfo>\n        </NavLink>\n        <InformationForFilm>\n          <ImgFilm\n            src={poster_path ? `${IMG_URL}${poster_path}` : `${img}`}\n            alt={original_title}\n          />\n          <ContainerInfoFilm>\n            <h2>{original_title}</h2>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <Genres>\n              <h3>Genres</h3>\n              {genres.map(({ name, id }) => (\n                <p>{name}</p>\n              ))}\n            </Genres>\n          </ContainerInfoFilm>\n        </InformationForFilm>\n        <h3>Additional information</h3>\n\n        <ContainerButtons>\n          <NavLink to=\"cast\">\n            <ButtonInfo>Cast</ButtonInfo>\n          </NavLink>\n          <NavLink to=\"reviews\">\n            <ButtonInfo>Reviews</ButtonInfo>\n          </NavLink>\n        </ContainerButtons>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_SEARCH_MOVIES = 'https://api.themoviedb.org/3/search/movie';\nconst URL_GET_DETAILS_MOVIES = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = 'f67e76050f18af747f45c959a8cec474';\n\nexport const axiosRequestTrendingMovie = async () => {\n\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${BASE_URL_TREND}`, params);\n    \n  return respons.data;\n};\nexport const searchMovies = async searchQuery => {\n  \n  const params = {\n    params: {\n      query: searchQuery,\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${URL_SEARCH_MOVIES}`, params);\n\n  return respons.data;\n};\nexport const axiosGetMovieDetails = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  const respons = await axios.get(`${URL_GET_DETAILS_MOVIES}/${id}`, params);\n  return respons.data;\n};\nexport const axiosGetMovieCredits = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/credits`,\n    params\n  );\n  return respons.data;\n};\nexport const axiosGetMovieReviews = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/reviews`,\n    params\n  );\n  return respons.data;\n};"],"names":["MoviesDetails","useState","movieinfo","setMovieinfo","error","setError","moviesId","useParams","location","useLocation","useEffect","fetchMoviesById","axiosGetMovieDetails","respons","Error","message","Loader","original_title","overview","genres","poster_path","goBackPath","state","from","Container","to","ButtonInfo","InformationForFilm","ImgFilm","src","img","alt","ContainerInfoFilm","Genres","map","name","id","ContainerButtons","Suspense","fallback","URL_GET_DETAILS_MOVIES","KEY","axiosRequestTrendingMovie","params","api_key","language","axios","data","searchMovies","searchQuery","query","axiosGetMovieCredits","axiosGetMovieReviews"],"sourceRoot":""}