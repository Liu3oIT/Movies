{"version":3,"file":"static/js/953.ed464a61.chunk.js","mappings":"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","sources":["components/SearchMovies/searchmoies.jsx","components/pages/SearchMovies/Search.jsx","components/server/api.jsx"],"sourcesContent":["import { ButtonInfo, Container, Form, Input } from 'components/pages/HomePage/HomePage.styled';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const FormSearch = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('query') || '';\n\n  const handleInput = event => {\n    const trimmedValue = event.currentTarget.value.trim();\n    setSearchParams({ query: trimmedValue.toLowerCase() });\n  };\n\n  const requestSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchParams);\n  };\n\n  return (\n    <>\n      <Container>\n        <NavLink to={location.state?.from || '/'}>\n          <ButtonInfo>Go Back</ButtonInfo>\n        </NavLink>\n        <Form onSubmit={requestSubmit}>\n          <Input\n            onChange={handleInput}\n            name=\"searchQuery\"\n            value={searchQuery}\n            type=\"text\"\n            placeholder=\"Search movies\"\n          />\n        </Form>\n      </Container>\n    </>\n  );\n};\n","import { FormSearch } from 'components/SearchMovies/searchmoies';\nimport { useEffect, useState } from 'react';\nimport { searchMovies } from '../../server/api';\nimport {\n  NavLink,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { ImegeLogo, ListMovies } from '../HomePage/HomePage.styled';\nimport img from '../../../image/1363011.png'\nconst IMG_URL = `https://image.tmdb.org/t/p/w500`;\nexport default function SearchForMovies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [listForSearch, setListForSearch] = useState([]);\n  const searchQuery = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const onFormSearch = query => {\n    setSearchParams(query);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await searchMovies(searchQuery);\n        setListForSearch(response.results);\n        \n      } catch (error) {\n        console.error('Error fetching movies:', error.message);\n      }\n    };\n    fetchMovies();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <FormSearch onSubmit={onFormSearch} />\n      <ListMovies>\n        {listForSearch.map(({ title, id, poster_path }) => (\n          <NavLink\n            to={`/Movies/${id}`}\n            state={{ from: location.pathname }}\n            key={id}\n          >\n            <ImegeLogo\n              src={poster_path ? `${IMG_URL}${poster_path}` : `${img}`}\n              alt={title}\n            />\n          </NavLink>\n        ))}\n      </ListMovies>\n    </>\n  );\n}","import axios from 'axios';\nconst BASE_URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_SEARCH_MOVIES = 'https://api.themoviedb.org/3/search/movie';\nconst URL_GET_DETAILS_MOVIES = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = 'f67e76050f18af747f45c959a8cec474';\n\nexport const axiosRequestTrendingMovie = async () => {\n\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${BASE_URL_TREND}`, params);\n    \n  return respons.data;\n};\nexport const searchMovies = async searchQuery => {\n  \n  const params = {\n    params: {\n      query: searchQuery,\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(`${URL_SEARCH_MOVIES}`, params);\n\n  return respons.data;\n};\nexport const axiosGetMovieDetails = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n    },\n  };\n  const respons = await axios.get(`${URL_GET_DETAILS_MOVIES}/${id}`, params);\n  return respons.data;\n};\nexport const axiosGetMovieCredits = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/credits`,\n    params\n  );\n  return respons.data;\n};\nexport const axiosGetMovieReviews = async id => {\n  const params = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n  const respons = await axios.get(\n    `${URL_GET_DETAILS_MOVIES}/${id}/reviews`,\n    params\n  );\n  return respons.data;\n};"],"names":["FormSearch","onSubmit","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","Container","to","state","from","ButtonInfo","Form","event","preventDefault","Input","onChange","trimmedValue","currentTarget","value","trim","query","toLowerCase","name","type","placeholder","SearchForMovies","useState","listForSearch","setListForSearch","useEffect","fetchMovies","searchMovies","response","results","console","error","message","ListMovies","map","title","id","poster_path","pathname","ImegeLogo","src","img","alt","URL_GET_DETAILS_MOVIES","KEY","axiosRequestTrendingMovie","params","api_key","language","axios","respons","data","axiosGetMovieDetails","axiosGetMovieCredits","axiosGetMovieReviews"],"sourceRoot":""}